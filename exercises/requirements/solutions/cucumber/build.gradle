// !!!!!!!!!!!!!!!!!!!!!!
// DO NOT TOUCH THIS FILE
// !!!!!!!!!!!!!!!!!!!!!!

// This file is an extensible Gradle build file for EPFL's Software Engineering course,
// designed to allow students to easily build and test their code from the command-line,
// and to allow the staff to automatically test code including coverage.
// The main tasks to use are 'build' (includes tests + coverage) and 'run'.

import org.gradle.api.JavaVersion
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent
import java.nio.file.Files

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    testImplementation 'io.cucumber:cucumber-java:7.0.0'
    testImplementation 'io.cucumber:cucumber-junit:7.0.0'
    // JUnit 5 "Jupiter"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

def javaVersionTarget = "17"
if (JavaVersion.current().toString() != javaVersionTarget) {
    println '!!!\n!!!'
    println "WARNING: This project was designed for Java ${javaVersionTarget} but you are instead using Java ${JavaVersion.current()}."
    println '         If you get this message while configuring an IDE such as IntelliJ or Android Studio, feel free to ignore it as long as it does not appear when running the app or tests.'
    println "         Otherwise, please use Java ${javaVersionTarget}, or continue using your version at your own risk."
    println '!!!\n!!!'
}

group = 'ch.sweng.inventory'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'ch.sweng.inventory', 'src/test/resources']
        }
    }
}